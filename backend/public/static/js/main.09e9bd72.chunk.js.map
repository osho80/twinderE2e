{
  "version": 3,
  "sources": [
    "history.js",
    "services/httpService.js",
    "services/matchService.js",
    "store/actions/matchActions.js",
    "pages/Home.jsx",
    "services/utilService.js",
    "services/userService.js",
    "services/socketService.js",
    "store/actions/userActions.js",
    "pages/Login.jsx",
    "pages/SignUp.jsx",
    "pages/About.jsx",
    "cmps/UserPreview.jsx",
    "pages/Gallery.jsx",
    "pages/Encounter.jsx",
    "pages/Dashboard.jsx",
    "cmps/About.jsx",
    "cmps/PostList.jsx",
    "pages/UserProfile.jsx",
    "cmps/MatchPreview.jsx",
    "cmps/MatchList.jsx",
    "cmps/NavBar.jsx",
    "cmps/Chat.jsx",
    "cmps/AddPost.jsx",
    "cmps/EditProfile.jsx",
    "cmps/Footer.jsx",
    "App.js",
    "serviceWorker.js",
    "store/reducers/matchReducer.js",
    "store/reducers/userReducer.js",
    "store/store.js",
    "index.js"
  ],
  "names": [
    "history",
    "createBrowserHistory",
    "axios",
    "Axios",
    "create",
    "withCredentials",
    "endpoint",
    "data",
    "ajax",
    "a",
    "method",
    "url",
    "res",
    "console",
    "log",
    "dir",
    "response",
    "status",
    "push",
    "matchService",
    "getMatches",
    "loggedInUserId",
    "queryStr",
    "httpService",
    "getById",
    "matchId",
    "openMatch",
    "addMsg",
    "loggedInUser",
    "msgTxt",
    "loadMatches",
    "dispatch",
    "matchesResived",
    "matches",
    "reverse",
    "_setMatchs",
    "loadMatch",
    "match",
    "_setMatch",
    "closeChat",
    "type",
    "err",
    "_updateMatch",
    "_addMsg",
    "msg",
    "Home",
    "this",
    "props",
    "className",
    "Component",
    "mapDispatchToProps",
    "connect",
    "state",
    "user",
    "userStore",
    "currUser",
    "loggedUser",
    "makeId",
    "length",
    "txt",
    "possible",
    "i",
    "charAt",
    "Math",
    "floor",
    "random",
    "userService",
    "login",
    "logout",
    "signup",
    "getUsers",
    "userPrefs",
    "city",
    "minAge",
    "maxAge",
    "gender",
    "userId",
    "remove",
    "update",
    "_id",
    "addReaction",
    "addPost",
    "postTxt",
    "uploadImg",
    "file",
    "UPLOAD_URL",
    "formData",
    "FormData",
    "append",
    "fetch",
    "body",
    "then",
    "json",
    "catch",
    "error",
    "addImg",
    "imgUrl",
    "userCred",
    "_handleLogin",
    "sessionStorage",
    "clear",
    "setItem",
    "JSON",
    "stringify",
    "targetUserId",
    "reaction",
    "newReaction",
    "id",
    "to",
    "timestamp",
    "Date",
    "now",
    "socket",
    "setup",
    "terminate",
    "on",
    "eventName",
    "cb",
    "off",
    "emit",
    "runSockets",
    "killSocket",
    "io",
    "loadUsers",
    "users",
    "_setUsers",
    "loadUser",
    "_setUser",
    "updateUser",
    "_updateUser",
    "userCreds",
    "_setLoggedInUser",
    "updateLoggedInUser",
    "_updateloggedInUser",
    "socketService",
    "_addReaction",
    "post",
    "_addPost",
    "Login",
    "loginCred",
    "email",
    "password",
    "loginHandleChange",
    "target",
    "field",
    "name",
    "value",
    "parseInt",
    "setState",
    "prevState",
    "handleKeyPress",
    "ev",
    "key",
    "doLogin",
    "onKeyPress",
    "TextField",
    "label",
    "multiline",
    "onChange",
    "autoComplete",
    "Button",
    "variant",
    "onClick",
    "SignUp",
    "signupCred",
    "fullName",
    "age",
    "imagesUrls",
    "signupHandleChange",
    "signupPrefsHandleChange",
    "onImgUpload",
    "Object",
    "values",
    "files",
    "forEach",
    "img",
    "doSignup",
    "onSubmit",
    "InputLabel",
    "Select",
    "labelId",
    "MenuItem",
    "accept",
    "multiple",
    "hidden",
    "htmlFor",
    "title",
    "IconButton",
    "color",
    "aria-label",
    "component",
    "About",
    "about",
    "developer",
    "isDetails",
    "onToggleAbout",
    "onToggleDeveloper",
    "onToggleDetails",
    "src",
    "alt",
    "UserPreview",
    "Gallery",
    "map",
    "idx",
    "matchStore",
    "currMatch",
    "Encounter",
    "currProfileIdx",
    "imgIdx",
    "numOfProfiles",
    "isRight",
    "isLeft",
    "onPrevImg",
    "onNextImg",
    "onReaction",
    "targetUser",
    "setEncounter",
    "onViewProfile",
    "handleSwipe",
    "deltaX",
    "setTimeout",
    "onSwipe",
    "undefined",
    "posts",
    "Dashboard",
    "moment",
    "require",
    "PostList",
    "createdAt",
    "fromNow",
    "UserProfile",
    "isMyProfile",
    "isLike",
    "showModal",
    "onAddphoto",
    "addImgProfile",
    "getUser",
    "params",
    "onShowModal",
    "action",
    "prevProps",
    "gendersrc",
    "MatchPreview",
    "onOpenMatch",
    "isOpenNotification",
    "isMatchOpen",
    "imageUrl",
    "msgs",
    "from",
    "MatchList",
    "getMatchUserInfo",
    "Navbar",
    "isProfileBtnActive",
    "isMatchBtnActive",
    "isAddPostActive",
    "view",
    "isEncounter",
    "isNewMatch",
    "setUpNavbar",
    "updatedUser",
    "setLoggedinUser",
    "onNewMatch",
    "matchName",
    "getMatchName",
    "onClickGoHomePage",
    "onClickProfileBtn",
    "onClickMatchBtn",
    "onToggleView",
    "onOpenMatchChat",
    "window",
    "location",
    "pathname",
    "onAddPostBtn",
    "onOpenMyProfile",
    "onLogOut",
    "onGoLogin",
    "matchCnt",
    "goBack",
    "reduce",
    "acc",
    "user1",
    "user2",
    "activeBgScreen",
    "closeBgScreen",
    "newMatchCnt",
    "Chat",
    "isChatVisible",
    "isEmojiesShown",
    "emojis",
    "onHandleMsgChange",
    "onSendMsg",
    "onClickHideChat",
    "onClickCloseChat",
    "getTimeDate",
    "timeStamp",
    "date",
    "getHours",
    "slice",
    "getMinutes",
    "getDate",
    "getMonth",
    "getFullYear",
    "onClickEmojiBtn",
    "addEmoji",
    "sym",
    "unified",
    "split",
    "codesArray",
    "el",
    "emoji",
    "String",
    "fromCodePoint",
    "myChat",
    "React",
    "createRef",
    "current",
    "scrollIntoView",
    "ref",
    "placeholder",
    "style",
    "position",
    "bottom",
    "right",
    "onSelect",
    "showPreview",
    "AddPost",
    "newPostTxt",
    "handelPostChange",
    "onAddPost",
    "preventDefault",
    "rows",
    "EditProfile",
    "isAdmin",
    "isBlock",
    "joinedAt",
    "reactions",
    "handleChange",
    "handleFormChange",
    "handleSubmit",
    "Footer",
    "App",
    "path",
    "exact",
    "Boolean",
    "hostname",
    "initialState",
    "getItem",
    "parse",
    "isBgScreenActive",
    "rootReducer",
    "combineReducers",
    "filter",
    "composeEnhancers",
    "__REDUX_DEVTOOLS_EXTENSION_COMPOSE__",
    "compose",
    "store",
    "createStore",
    "applyMiddleware",
    "thunk",
    "ReactDOM",
    "render",
    "document",
    "getElementById",
    "navigator",
    "serviceWorker",
    "ready",
    "registration",
    "unregister"
  ],
  "mappings": "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",
  "file": "static/js/main.09e9bd72.chunk.js",
  "sourcesContent": [
    "import { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;",
    "import history from '../history';\r\nimport Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data){\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data){\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data){\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data){\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method='get', data=null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n          history.push('/login');\r\n        }\r\n        throw err;\r\n    }\r\n}",
    "import httpService from '../services/httpService';\r\nexport const matchService = {\r\n    getMatches,\r\n    getById,\r\n    openMatch,\r\n    addMsg\r\n}\r\n\r\n\r\nfunction getMatches(loggedInUserId) {\r\n    const queryStr = `?loggedInUserId=${loggedInUserId}`;\r\n    return httpService.get(`match/${queryStr}`);\r\n}\r\n\r\nfunction getById(matchId) {\r\n    return httpService.get(`match/${matchId}`);\r\n}\r\n\r\nfunction openMatch (loggedInUserId, matchId) {\r\n    return httpService.post('match/openmatch', {loggedInUserId, matchId});\r\n}\r\n\r\nfunction addMsg (loggedInUser, msgTxt, matchId) {\r\n    return httpService.post('match/addMsg', {loggedInUser, msgTxt, matchId});\r\n}\r\n\r\n",
    "import { matchService } from '../../services/matchService';\r\n\r\nexport function loadMatches(loggedInUserId) {\r\n    return async dispatch => {\r\n        try {\r\n            const matchesResived = await matchService.getMatches(loggedInUserId);\r\n            const matches = matchesResived.reverse();\r\n            dispatch(_setMatchs(matches));\r\n        } catch (err) {\r\n            console.log('matchActions: err in loadMatches', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadMatch(matchId) {\r\n    return async dispatch => {\r\n        try {\r\n            const match = await matchService.getById(matchId);\r\n            dispatch(_setMatch(match));\r\n        } catch (err) {\r\n            console.log('matchActions: err in loadMatch', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeMatch(matchId) {\r\n    return async dispatch => {\r\n        try {\r\n            await matchService.remove(matchId);\r\n            dispatch(_removeMatch(matchId));\r\n        } catch (err) {\r\n            console.log('matchActions: err in removeMatch', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateMatch(match) {\r\n    return async dispatch => {\r\n        try {\r\n            await matchService.update(match);\r\n            dispatch(_updateMatch(match));\r\n        } catch (err) {\r\n            console.log('matchActions: err in updateMatch', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function addMatch(match) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(_addMatch(match));\r\n        } catch (err) {\r\n            console.log('matchActions: err in addMatch', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function openMatch(loggedInUserId, matchId) {\r\n    return async dispatch => {\r\n        try {\r\n            const match = await matchService.openMatch(loggedInUserId, matchId);\r\n            dispatch(_updateMatch(match));\r\n        } catch (err) {\r\n            console.log('matchActions: err in openMatch', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function closeChat() {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(_closeMatchChat())\r\n        } catch (err) {\r\n            console.log('matchActions: err in closeChat', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function addMsg(loggedInUser, msgTxt, matchId) {\r\n    return async dispatch => {\r\n        try {\r\n            const msg = await matchService.addMsg(loggedInUser, msgTxt, matchId);\r\n            dispatch(_addMsg(msg, matchId));\r\n        } catch (err) {\r\n            console.log('matchActions: err in addMsg', err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction _setMatchs(matches) {\r\n    return { type: 'SET_MATCHES', matches }\r\n}\r\n\r\nexport function _addNewMatchNotifiction() {\r\n    return { type: 'ADD_NEW_MATCH_NOTIFY' }\r\n}\r\n\r\nfunction _setMatch(match) {\r\n    return { type: 'SET_MATCH', match }\r\n}\r\n\r\nfunction _removeMatch(matchId) {\r\n    return { type: 'MATCH_REMOVE', matchId }\r\n}\r\n\r\nfunction _updateMatch(match) {\r\n    return { type: 'UPDATE_MATCH', match }\r\n}\r\nfunction _addMatch(match) {\r\n    return { type: 'MATCH_ADD', match }\r\n}\r\n\r\nfunction _closeMatchChat() {\r\n    return { type: 'CLOSE_CHAT'}\r\n}\r\n\r\nfunction _addMsg(msg, matchId) {\r\n    const data = {msg, matchId}\r\n    return { type: 'MSG_ADD', data }\r\n}\r\n\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { closeChat } from '../store/actions/matchActions';\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    this.props.closeChat();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"home-page\">\r\n        <article className=\"main-header flex align-center column\">\r\n          <h2>Post Your Love</h2>\r\n          <h2>Find Your Match</h2>\r\n        </article>\r\n        <article className=\"action-call\">\r\n          <h3>Signup and join our incredible community</h3>\r\n          <h3>thousands of amazing people are just a click away...</h3>\r\n          {/* <h3>Signup and begin an exciting journey</h3>\r\n        <h3>and meet thousands of amazi</h3> */}\r\n        </article>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.userStore.currUser,\r\n    loggedUser: state.userStore.loggedInUser\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  closeChat\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n\r\n\r\n",
    "export function makeId(length = 3) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}\r\n\r\nexport function getTimeDate(timeStamp) {\r\n    const date = new Date(timeStamp);\r\n    const formattedDate = ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + ' ' +  ('0' + date.getDate()).slice(-2) + '/' + ('0' + (date.getMonth() + 1)).slice(-2) + '/' + date.getFullYear();\r\n    return formattedDate;\r\n}\r\n",
    "import httpService from './httpService';\r\nimport { makeId } from './utilService';\r\n\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    addReaction,\r\n    addPost,\r\n    uploadImg,\r\n    addImg\r\n}\r\n\r\nfunction getUsers(userPrefs) {\r\n    const queryStr = `?city=${userPrefs.city}&minAge=${userPrefs.minAge}&maxAge=${userPrefs.maxAge}&gender=${userPrefs.gender}`;\r\n    return httpService.get(`user/${queryStr}`);\r\n}\r\n\r\nfunction getById(userId) {\r\n    return httpService.get(`user/${userId}`);\r\n}\r\n\r\nfunction remove(userId) {\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nfunction update(user) {\r\n    return httpService.put(`user/${user._id}`, user);\r\n}\r\n\r\nasync function login(userCred) {\r\n    const user = await .post('auth/login', userCred);\r\n    return _handleLogin(user);\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _handleLogin(user)\r\n}\r\n\r\nasync function logout() {\r\n    await httpService.post('auth/logout');\r\n    sessionStorage.clear();\r\n}\r\n\r\n\r\nfunction _handleLogin(user) {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}\r\n\r\nasync function addReaction(loggedInUserId, targetUserId, reaction) {\r\n    const newReaction = {\r\n        id: makeId(4),\r\n        to: targetUserId,\r\n        type: reaction,\r\n        timestamp: Date.now()\r\n    }\r\n\r\n    const data = { loggedInUserId, newReaction };\r\n\r\n    return httpService.post('user/addreaction', data);\r\n}\r\n\r\nfunction addPost(loggedInUserId, postTxt) {\r\n    return httpService.post('user/addpost', { loggedInUserId, postTxt });\r\n}\r\n\r\nfunction addImg(loggedInUserId, imgUrl) {\r\n    return httpService.post('user/addimg', { loggedInUserId, imgUrl });\r\n}\r\n\r\nfunction uploadImg(file) {\r\n    const CLOUD_NAME = 'ddavidson';\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`;\r\n\r\n    const UPLOAD_PRESET = \"wdyr4hpo\";\r\n    const formData = new FormData();\r\n\r\n    formData.append('file', file);\r\n    formData.append('upload_preset', UPLOAD_PRESET);\r\n    return fetch(UPLOAD_URL, {\r\n        method: 'POST',\r\n        body: formData\r\n    })\r\n        .then(res => res.json())\r\n        .catch(err => console.error(err))\r\n}\r\n\r\n",
    "import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit,\r\n  runSockets,\r\n  killSocket\r\n};\r\n\r\nfunction setup() {\r\n  socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n  socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  socket.emit(eventName, data);\r\n}\r\n\r\nfunction runSockets(user) {\r\n  setup();\r\n  emit('login', user);\r\n}\r\n\r\n\r\nfunction killSocket() {\r\n  off('new match');\r\n  off('check match');\r\n  off('sending msg');\r\n  off('user added post');\r\n  off('post added');\r\n  terminate();\r\n}\r\n",
    "import { userService } from '../../services/userService';\r\nimport socketService from '../../services/socketService';\r\n\r\nexport function loadUsers(userPrefs) {\r\n    return async dispatch => {\r\n        try {\r\n            const users = await userService.getUsers(userPrefs);\r\n            dispatch(_setUsers(users));\r\n        } catch (err) {\r\n            console.log('userActions: err in loadUsers', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadUser(userId) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.getById(userId);\r\n            dispatch(_setUser(user));\r\n        } catch (err) {\r\n            console.log('userActions: err in loadUser', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.remove(userId);\r\n            dispatch(_removeUser(userId));\r\n        } catch (err) {\r\n            console.log('userActions: err in removeUser', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateUser(user) {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.update(user);\r\n            dispatch(_updateUser(user));\r\n        } catch (err) {\r\n            console.log('userActions: err in updateUser', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function login(userCreds) {\r\n    return async dispatch => {\r\n        const user = await userService.login(userCreds);\r\n        dispatch(_setLoggedInUser(user));\r\n    }\r\n}\r\nexport function setLoggedinUser(user) {\r\n    return dispatch => {\r\n        sessionStorage.setItem('user', JSON.stringify(user))\r\n        dispatch(_setLoggedInUser(user));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function updateLoggedInUser(user) {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.update(user);\r\n            sessionStorage.setItem('user', JSON.stringify(user))\r\n            dispatch(_updateloggedInUser(user));\r\n        } catch (err) {\r\n            console.log('userActions: err in updateLoggedInUser', err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function signup(userCreds) {\r\n    return async dispatch => {\r\n        const user = await userService.signup(userCreds);\r\n        dispatch(_setLoggedInUser(user));\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    socketService.killSocket();\r\n    return async dispatch => {\r\n        await userService.logout();\r\n        dispatch(_removeloggedInUser(null));\r\n    }\r\n}\r\n\r\nexport function addReaction(loggedInUserId, targetUserId, reaction) {\r\n    return async dispatch => {\r\n        try {\r\n            const newReaction = await userService.addReaction(loggedInUserId, targetUserId, reaction);\r\n            if (reaction === 'like') socketService.emit('check match', newReaction);\r\n            dispatch(_addReaction(newReaction))\r\n        } catch (err) {\r\n            console.log('userActions: err in addReaction', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function addPost(loggedInUserId, postTxt) {\r\n    return async dispatch => {\r\n        try {\r\n            const post = await userService.addPost(loggedInUserId, postTxt);\r\n            socketService.emit('user added post', {loggedInUserId});\r\n            dispatch(_addPost(post));\r\n        } catch (err) {\r\n            console.log('userActions: err in addPost', err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function addImgProfile(loggedInUserId, imgUrl) {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.addImg(loggedInUserId, imgUrl);\r\n            dispatch(_addImg(imgUrl));\r\n        } catch (err) {\r\n            console.log('userActions: err in addImgProfile', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function activeBgScreen() {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(_activeBgScreen());\r\n        } catch (err) {\r\n            console.log('userActions: err in activeBgScreen', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function closeBgScreen() {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(_closeBgScreen());\r\n        } catch (err) {\r\n            console.log('userActions: err in closeBgScreen', err);\r\n        }\r\n    }\r\n}\r\n\r\nfunction _setLoggedInUser(user) {\r\n    return { type: 'SET_LOGGEDIN_USER', user }\r\n}\r\n\r\nfunction _removeloggedInUser() {\r\n    return { type: 'LOGGEDIN_USER_REMOVE' }\r\n}\r\n\r\nfunction _updateloggedInUser(user) {\r\n    return { type: 'LOGGEDIN_USER_UPDATE', user }\r\n}\r\n\r\nfunction _setUser(user) {\r\n    return { type: 'SET_USER', user }\r\n}\r\n\r\nfunction _setUsers(users) {\r\n    return { type: 'SET_USERS', users }\r\n}\r\n\r\nfunction _removeUser(userId) {\r\n    return { type: 'REMOVE_USER', userId }\r\n}\r\n\r\nfunction _updateUser(user) {\r\n    return { type: 'UPDATE_USER', user }\r\n}\r\n\r\nfunction _addReaction(newReaction) {\r\n    return { type: 'ADD_REACTIONS', newReaction }\r\n}\r\n\r\nfunction _addPost(post) {\r\n    return { type: 'ADD_POST', post }\r\n}\r\n\r\nfunction _addImg(img) {\r\n    return { type: 'ADD_USER_IMG', img }\r\n}\r\n\r\nfunction _activeBgScreen() {\r\n    return { type: 'ACTIVE_BG_SCREEN' }\r\n}\r\n\r\nfunction _closeBgScreen() {\r\n    return { type: 'CLOSE_BG_SCREEN' }\r\n}\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { login, logout, signup, loadUsers } from '../store/actions/userActions';\r\nimport { loadMatches } from '../store/actions/matchActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        loginCred: {\r\n            email: 'johns@gmail.com',\r\n            password: 'j1234'\r\n        },\r\n        msg: ''\r\n    }\r\n\r\n    loginHandleChange = ({ target }) => {\r\n        const field = target.name;\r\n        const value = (target.type === 'number') ? parseInt(target.value) : target.value;\r\n        this.setState(prevState => ({ loginCred: { ...prevState.loginCred, [field]: value } }));\r\n    }\r\n\r\n    handleKeyPress = (ev) => {\r\n        if (ev.key === 'Enter') {\r\n            this.doLogin();\r\n        }\r\n    }\r\n\r\n    doLogin = async () => {\r\n        const { email, password } = this.state.loginCred;\r\n        if (!email || !password) {\r\n            return this.setState({ msg: 'Please enter user/password' });\r\n        }\r\n        const userCreds = { email, password };\r\n        await this.props.login(userCreds);\r\n        await this.props.loadMatches(this.props.loggedInUser._id);\r\n        this.props.history.push('/encounter');\r\n    }\r\n\r\n    render() {\r\n        const { msg } = this.state;\r\n        return (\r\n            <div className=\"login-container\">\r\n                <h1>Login</h1>\r\n                <section className=\"login-form flex column align-center\" onKeyPress={this.handleKeyPress}>\r\n                    <TextField\r\n                        id=\"standard-textarea\"\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={this.state.loginCred.email}\r\n                        multiline\r\n                        onChange={this.loginHandleChange}\r\n                    />\r\n                    <TextField\r\n                        id=\"standard-password-input\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={this.state.loginCred.password}\r\n                        onChange={this.loginHandleChange}\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    {msg && msg}\r\n                    <Link to=\"/signup\" className=\"sign-up-link\">New Member? Sign up</Link>\r\n                    <Button variant=\"contained\" onClick={this.doLogin}>Login</Button>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.userStore.users,\r\n        loggedInUser: state.userStore.loggedInUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    loadUsers,\r\n    loadMatches\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { userService } from '../services/userService';\r\nimport { signup } from '../store/actions/userActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        signupCred: {\r\n            fullName: '',\r\n            gender: '',\r\n            city: '',\r\n            age: '',\r\n            email: '',\r\n            password: '',\r\n            imagesUrls: [],\r\n            userPrefs: {\r\n                minAge: '',\r\n                maxAge: '',\r\n                gender: '',\r\n                city: ''\r\n            }\r\n        },\r\n        msg: ''\r\n    }\r\n    signupHandleChange = ({ target }) => {\r\n        const field = target.name;\r\n        const value = (target.type === 'number' && target.value !== '') ? parseInt(target.value) : target.value;\r\n        this.setState(prevState => ({ signupCred: { ...prevState.signupCred, [field]: value } }));\r\n    }\r\n\r\n    signupPrefsHandleChange = ({ target }) => {\r\n        const field = target.name;\r\n        const value = (target.type === 'number' && target.value !== '') ? parseInt(target.value) : target.value;\r\n\r\n        this.setState(prevState => ({\r\n            signupCred: {\r\n                ...prevState.signupCred,\r\n                userPrefs: { ...prevState.signupCred.userPrefs, [field]: value }\r\n            }\r\n        }));\r\n    }\r\n\r\n    onImgUpload = ({ target }) => {\r\n        const files = Object.values(target.files);\r\n        files.forEach(async (file) => {\r\n            const img = await userService.uploadImg(file)\r\n            this.setState(prevState => ({\r\n                signupCred: {\r\n                    ...prevState.signupCred, imagesUrls:\r\n                        [...prevState.signupCred.imagesUrls, img.url]\r\n                }\r\n            }));\r\n        });\r\n    }\r\n\r\n    doSignup = async () => {\r\n        const { fullName, gender, city, email, age, password, imagesUrls, userPrefs } = this.state.signupCred;\r\n        if (!fullName || !gender || !city || !email || !password || !userPrefs) {\r\n            return this.setState({ msg: 'All inputs are required!' });\r\n        }\r\n\r\n        const userCreds = { fullName, gender, city, age, email, password, imagesUrls, userPrefs };\r\n\r\n        this.props.signup(userCreds);\r\n        this.setState({ signupCred: { fullName: '', gender: '', city: '', age: '', email: '', password: '', imagesUrls: '', userPrefs: '' } });\r\n        this.props.history.push('/encounter');\r\n    }\r\n\r\n    render() {\r\n        const { msg } = this.state;\r\n        return (\r\n            <div className=\"signup-container\">\r\n                <h1>Sign Up</h1>\r\n                <form onSubmit={this.doSignup} className=\"sign-up-form flex column align-center\">\r\n                    <TextField\r\n                        id=\"standard-textarea\"\r\n                        label=\"Full Name\"\r\n                        type=\"text\"\r\n                        name=\"fullName\"\r\n                        value={this.state.signupCred.fullName}\r\n                        multiline\r\n                        onChange={this.signupHandleChange}\r\n                    />\r\n                     <TextField\r\n                        id=\"standard-number\"\r\n                        label=\"Age\"\r\n                        type=\"number\"\r\n                        name=\"age\"\r\n                        value={this.state.signupCred.age}\r\n                        onChange={this.signupHandleChange}\r\n                    />\r\n                    <InputLabel id=\"demo-simple-select-label-gender\">Gender</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label-gender\"\r\n                        id=\"demo-simple-select\"\r\n                        name=\"gender\"\r\n                        onChange={this.signupHandleChange}\r\n                    >\r\n                        <MenuItem value=\"male\">Male</MenuItem>\r\n                        <MenuItem value=\"female\">Female</MenuItem>\r\n                    </Select>\r\n                    <InputLabel id=\"demo-simple-select-label-city\">City</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label-city\"\r\n                        id=\"demo-simple-select\"\r\n                        name=\"city\"\r\n                        onChange={this.signupHandleChange}\r\n                    >\r\n                        <MenuItem value=\"Tel-Aviv\">Tel-Aviv</MenuItem>\r\n                        <MenuItem value=\"Jerusalem\">Jerusalem</MenuItem>\r\n                    </Select>\r\n                    <TextField\r\n                        id=\"standard-textarea\"\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        value={this.state.signupCred.email}\r\n                        multiline\r\n                        onChange={this.signupHandleChange}\r\n                    />\r\n                    <TextField\r\n                        id=\"standard-password-input\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={this.state.signupCred.password}\r\n                        onChange={this.signupHandleChange}\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" name=\"imagesUrls\" multiple onChange={this.onImgUpload} hidden />\r\n                    <label htmlFor=\"icon-button-file\" className=\"img-upload-lable\" title=\"Upload your images\">\r\n                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                            <PhotoCamera />\r\n                        </IconButton>\r\n                    </label>\r\n                    <h2>Prefs:</h2>\r\n                    <TextField\r\n                        id=\"standard-number\"\r\n                        label=\"Min-Age\"\r\n                        type=\"number\"\r\n                        name=\"minAge\"\r\n                        value={this.state.signupCred.userPrefs.minAge}\r\n                        onChange={this.signupPrefsHandleChange}\r\n                    />\r\n                    <TextField\r\n                        id=\"standard-number\"\r\n                        label=\"Max-Age\"\r\n                        type=\"number\"\r\n                        name=\"maxAge\"\r\n                        value={this.state.signupCred.userPrefs.maxAge}\r\n                        onChange={this.signupPrefsHandleChange}\r\n                    />\r\n                    <InputLabel id=\"demo-simple-select-label-gender\">Gender</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label-gender\"\r\n                        id=\"demo-simple-select\"\r\n                        name=\"gender\"\r\n                        onChange={this.signupPrefsHandleChange}\r\n                    >\r\n                        <MenuItem value=\"male\">Male</MenuItem>\r\n                        <MenuItem value=\"female\">Female</MenuItem>\r\n                    </Select>\r\n                    <InputLabel id=\"demo-simple-select-label-city\">City</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label-city\"\r\n                        id=\"demo-simple-select\"\r\n                        name=\"city\"\r\n                        onChange={this.signupPrefsHandleChange}\r\n                    >\r\n                        <MenuItem value=\"Tel-Aviv\">Tel-Aviv</MenuItem>\r\n                        <MenuItem value=\"Jerusalem\">Jerusalem</MenuItem>\r\n                    </Select>\r\n                    {msg && msg}\r\n                    <Button className = \"sign-up-btn\" variant=\"contained\" onClick={this.doSignup}>Signup</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.userStore.users,\r\n        loggedInUser: state.userStore.loggedInUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    signup\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n",
    "import React, { Component } from 'react';\r\n\r\nexport class About extends Component {\r\n  state = {\r\n   \r\n    about: 'vision',\r\n    developer: null,\r\n    isDetails: false\r\n  };\r\n\r\n  \r\n\r\n  onToggleAbout = () => {\r\n    let { about } = this.state;\r\n    if (about === 'vision') this.setState({ about: 'team' })\r\n    else this.setState({ about: 'vision' })\r\n  }\r\n\r\n  onToggleDeveloper = (developer) => {\r\n    this.setState({ developer })\r\n    this.setState({ isDetails: true })\r\n\r\n  }\r\n\r\n  onToggleDetails = () => {\r\n    this.setState({ isDetails: false })\r\n  }\r\n\r\n  render() {\r\n    let { about, developer, isDetails } = this.state;\r\n    return (\r\n      <section className=\"about-main\">\r\n        {(about === 'vision') ? <h2 className=\"about-toggle\" onClick={this.onToggleAbout}>Our Vision</h2> :\r\n          <h2 className=\"about-toggle\" onClick={this.onToggleAbout}>Our Team</h2>}\r\n        {(about === 'vision') && <section className=\"about-twinder\">\r\n          <p>\r\n            We at Twinder think that dating apps tend to be either superficial or extremely tiresome with page after page of question that don’t really help you find your match.\r\n          </p>\r\n          <p>\r\n            The social era has brought us so much and its all being tossed away in the dating apps scene.\r\n          </p>\r\n          <p>\r\n            If you share the feeling that you would rather have the possibility for a deeper glance into your possible match’s inner world, come join our community of beautiful and exciting people looking to celebrate life to the fullest.\r\n          </p>\r\n          <p>\r\n            Here at Twinder, we believe everyone should be able to introduce themselves as they wish, and not be constrained to a set of question and predefined answers. In Twinder it is easy to post your thoughts, ideas, activities or anything else you think may help others to get to know you better and improve your chances of finding your right match in a way which corresponds to both of your wishes and needs.\r\n          </p>\r\n        </section>}\r\n        {(about === 'team') && <section className=\"about-developers\">\r\n          <div className=\"developer-preview\">\r\n            <div className=\"member1\">\r\n              <img className=\"member1-img\" src='../assets/images/daniel2.jpeg' alt=\"\" onClick={() => this.onToggleDeveloper('daniel')} />\r\n              <h3 className=\"member1-name\">\r\n                Daniel Davidson\r\n              </h3>\r\n            </div>\r\n            <div className=\"member2\">\r\n              <img className=\"member2-img\" src='../assets/images/itay.jpg' alt=\"\" onClick={() => this.onToggleDeveloper('itay')}/>\r\n              <h3>\r\n                Itay Rotshtein\r\n              </h3>\r\n            </div>\r\n            <div className=\"member3\">\r\n              <img className=\"member3-img\" src='../assets/images/Oshri2.jpg' alt=\"\" onClick={() => this.onToggleDeveloper('oshri')} />\r\n              <h3>\r\n                Oshri Hayke\r\n              </h3>\r\n            </div>\r\n          </div>\r\n\r\n          {developer && isDetails && <section className=\"developer-details\">\r\n            <button className=\"close-dev-details-modal\" onClick={this.onToggleDetails}>X</button>\r\n            {(developer === 'daniel') && <p>\r\n              Til Programmer <br />\r\n            Incharge of Backend wiring <br />\r\n            Never stops working <br />\r\n            Will build whatever your company needs....\r\n            </p>}\r\n            {(developer === 'itay') && <p>\r\n              Til Programmer <br />\r\n            Incharge of Backend wiring <br />\r\n            Never stops working <br />\r\n            Will build whatever your company needs....\r\n            </p>}\r\n            {(developer === 'oshri') && <p>\r\n              Swiper Viper <br />\r\n            scss bootcamp <br />\r\n            Never stops working <br />\r\n            Will build whatever your company needs....\r\n            </p>}\r\n\r\n          </section>}\r\n        </section>}\r\n        {(about === 'vision') ? <h2 className=\"about-toggle\" onClick={this.onToggleAbout}>Our Team</h2> :\r\n          <h2 className=\"about-toggle\" onClick={this.onToggleAbout}>Our Vision</h2>}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n",
    "import React from 'react';\r\n\r\nexport function UserPreview({ user, history }) {\r\n\r\n    function onClickUserPrev(userId) {\r\n        history.push(`/profile/${userId}`);\r\n    }\r\n\r\n    return (\r\n        <article className=\"user-preview\" onClick={() => onClickUserPrev(user._id)}>\r\n            <img src={user.imagesUrls[0]} alt={user.fullName} />\r\n            <div className=\"user-min-info\">\r\n                <p>{user.fullName}</p>\r\n                <p>{user.age}</p>\r\n                <p> {user.city}</p>\r\n            </div>\r\n        </article>\r\n    )\r\n} ",
    "import React, { Component } from 'react';\r\nimport { UserPreview } from '../cmps/UserPreview';\r\nimport { connect } from 'react-redux';\r\nimport { loadUsers } from '../store/actions/userActions';\r\nimport {closeChat} from '../store/actions/matchActions';\r\n\r\n\r\n\r\nclass Gallery extends Component {\r\n    \r\n    componentDidMount() { \r\n        const { loggedInUser } = this.props;\r\n        if (!loggedInUser) return this.props.history.push('/login');\r\n        this.props.loadUsers(loggedInUser.userPrefs);\r\n        \r\n        if (this.props.match) this.props.closeChat();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { users, history } = this.props;\r\n        return (\r\n            (!users) ? 'Loading...' : <section className=\"gallery-container\">\r\n                {users.map((user, idx) => <UserPreview key={idx} user={user} history = {history} />)}\r\n            </section>\r\n        )\r\n    }\r\n}   \r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.userStore.users,\r\n        loggedInUser: state.userStore.loggedInUser,\r\n        match: state.matchStore.currMatch\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    closeChat\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Gallery);\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Hammer from 'react-hammerjs';\r\nimport { updateUser, login, loadUser, loadUsers, addReaction } from '../store/actions/userActions.js';\r\n\r\n\r\n\r\n\r\nclass Encounter extends Component {\r\n\r\n    state = {\r\n        currProfileIdx: 0,\r\n        imgIdx: 0,\r\n        numOfProfiles: null,\r\n        isRight: false,\r\n        isLeft: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { loggedInUser } = this.props;\r\n        if (!loggedInUser) return this.props.history.push('/login');\r\n        this.props.loadUsers(loggedInUser.userPrefs);\r\n    }\r\n\r\n    setEncounter() {\r\n        let { currProfileIdx } = this.state;\r\n        if (this.state.currProfileIdx === this.props.users.length - 1) {\r\n            this.setState({ imgIdx: 0, currProfileIdx: 0 })\r\n        } else {\r\n\r\n            this.setState({ imgIdx: 0, currProfileIdx: ++currProfileIdx })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onPrevImg = () => {\r\n        const { users } = this.props;\r\n        let { imgIdx, currProfileIdx } = this.state\r\n        const i = users[currProfileIdx].imagesUrls.length\r\n        if (imgIdx <= 0) imgIdx = (i - 1)\r\n        else --imgIdx\r\n        this.setState({ imgIdx })\r\n    }\r\n\r\n    onNextImg = () => {\r\n        let { imgIdx, currProfileIdx } = this.state\r\n        const { users } = this.props\r\n        if (imgIdx >= users[currProfileIdx].imagesUrls.length - 1) imgIdx = 0\r\n        else imgIdx++\r\n\r\n        this.setState({ imgIdx })\r\n    }\r\n\r\n    onReaction = (reaction) => {\r\n        const { users } = this.props\r\n        const { currProfileIdx } = this.state\r\n        let targetUser = users[currProfileIdx]\r\n        this.props.addReaction(this.props.loggedInUser._id, targetUser._id, reaction)\r\n\r\n        this.setEncounter();\r\n\r\n\r\n    }\r\n\r\n\r\n    onViewProfile = () => {\r\n        const { currProfileIdx } = this.state;\r\n        const { users } = this.props;\r\n        this.props.history.push(`/profile/${users[currProfileIdx]._id}`)\r\n    }\r\n\r\n    get currUser() {\r\n        return this.props.users[this.state.currProfileIdx]\r\n    }\r\n\r\n    handleSwipe = (ev) => {\r\n        const { users } = this.props\r\n        const { currProfileIdx } = this.state\r\n        let targetUser = users[currProfileIdx]\r\n        if (ev.deltaX > 100) {\r\n            this.props.addReaction(this.props.loggedInUser._id, targetUser._id, 'like')\r\n            this.setState({ isRight: true })\r\n        }\r\n        if (ev.deltaX < -100) {\r\n            this.props.addReaction(this.props.loggedInUser._id, targetUser._id, 'dislike')\r\n            this.setState({ isLeft: true })\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({ isRight: false, isLeft: false })\r\n            this.setEncounter();\r\n        }, 800)\r\n    }\r\n\r\n    render() {\r\n        const { currProfileIdx, imgIdx, isRight, isLeft } = this.state;\r\n        const { users } = this.props;\r\n        return (!users.length) ? <h3>Loading.... </h3> :\r\n\r\n            <section className=\"encounter-display\">\r\n                <div className=\"enc-action-zone\">\r\n                    <div className=\"enc-nav-btns\">\r\n                        <img className=\"enc-right-btn\" src='../assets/images/next.png' alt=\"\" onClick={this.onNextImg} />\r\n                        <img className=\"enc-left-btn\" src='../assets/images/next.png' alt=\"\" onClick={this.onPrevImg} />\r\n\r\n                    </div>\r\n                    <Hammer onSwipe={this.handleSwipe}>\r\n                        <div className=\"top card flex\">\r\n                            {isRight && <span className=\"reaction yeah\">YEAP</span>}\r\n                            {isLeft && <p className=\"reaction nope\">NOPE</p>}\r\n                            <img className={`currCard ${isRight ? 'right' : ''} ${isLeft ? 'left' : ''}`} src={`${users[currProfileIdx].imagesUrls[imgIdx]}`} alt={`${users[currProfileIdx].fullName}`} />\r\n                        </div>\r\n                    </Hammer>\r\n                    <div className=\"enc-yesno-btns\">\r\n                        <img className=\"love\" src='../assets/images/heart-circle-pinkier.png' alt=\"\" onClick={() => this.onReaction('like')} />\r\n                        <img className=\"pass\" src='../assets/images/new-x.png' alt=\"\" onClick={() => this.onReaction('dislike')} />\r\n\r\n                    </div>\r\n                    {(users[currProfileIdx + 1] === undefined) ? '' :\r\n                        <div className=\"bottom card\">\r\n                            <img src={`${users[currProfileIdx + 1].imagesUrls[imgIdx]}`} alt={`${users[currProfileIdx + 1].fullName}`} />\r\n                        </div>}\r\n\r\n\r\n                </div>\r\n                <section className=\"encounter-profile-section flex justify-center align-start column\">\r\n                    <div className=\"encounter-profile-overview\">\r\n                        <div className=\"enc-profile-basics\">\r\n                            <h2>{users[currProfileIdx].fullName}, {users[currProfileIdx].age} </h2>\r\n                            <h3>{users[currProfileIdx].city}</h3>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    {(!this.currUser.posts.length) ? '' : <div className=\"enc-post\">\r\n                        <h4>{this.currUser.posts[0].txt}</h4>\r\n                    </div>}\r\n                    <div className=\"enc-view-profile\">\r\n                        <img title=\"View Profile\" src='../assets/images/view-profile-pinkish.png' alt=\"\" onClick={this.onViewProfile} />\r\n                    </div>\r\n                    {/* <button className=\"enc-view-profile-btn\" onClick={this.onViewProfile}>View Profile</button> */}\r\n                </section>\r\n            </section>\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.userStore.currUser,\r\n        users: state.userStore.users,\r\n        loggedInUser: state.userStore.loggedInUser\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    loadUser,\r\n    loadUsers,\r\n    login,\r\n    updateUser,\r\n    addReaction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Encounter);",
    "import React, { Component } from 'react';\r\n\r\nexport class Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}",
    "import React from 'react';\r\n\r\nexport function About({ user }) {\r\n    return (\r\n        <div className=\"about-sec flex justify-center  column\">\r\n            {/* <div>Age:{user.age}</div> */}\r\n            {/* <div>City:{user.city}</div> */}\r\n            {/* <div>Email:{user.email}</div> */}\r\n            {/* <div>Gender:{user.gender}</div> */}\r\n\r\n            <div>Looking for {user.userPrefs.gender}</div>\r\n            <div> between {user.userPrefs.minAge} to {user.userPrefs.maxAge}</div>\r\n            <div> from {user.userPrefs.city}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n",
    "import React from 'react';\r\nvar moment = require('moment'); // require\r\n\r\nexport function PostList({ user }) {\r\n    return (\r\n        <section className=\"posts-section\">\r\n            {user.posts.map((post, idx) => {\r\n                return <div key={idx} className=\"user-post flex justify-center column \">\r\n                    <section className=\"flex\">\r\n                        <div>\r\n                            <img className=\"mini-img\" src={user.imagesUrls[0]} alt=\"no-img\" />\r\n                        </div>\r\n                        <div className=\"flex column\">\r\n                            <div className=\"moment\"> {moment(post.createdAt).fromNow()}</div>\r\n                            <div className=\"post-txt\"> {post.txt}</div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            })\r\n            }\r\n        </section>\r\n    )\r\n}",
    "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateUser, login, loadUsers, loadUser, addReaction, updateLoggedInUser, addImgProfile } from '../store/actions/userActions.js';\r\nimport { About } from '../cmps/About'\r\nimport { PostList } from '../cmps/PostList'\r\nimport \"../../node_modules/react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { userService } from '../services/userService.js';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\n\r\n\r\nclass UserProfile extends Component {\r\n\r\n    state = {\r\n        isMyProfile: '',\r\n        isLike: '',\r\n        showModal: false\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getUser();\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.id !== this.props.match.params.id) {\r\n            this.getUser();\r\n        }\r\n    }\r\n\r\n    onAddphoto = async ({ target }) => {\r\n        const files = Object.values(target.files);\r\n        files.forEach(async (file) => {\r\n            const img = await userService.uploadImg(file)\r\n            this.props.addImgProfile(this.props.loggedInUser._id, img.url);\r\n        });\r\n    }\r\n\r\n    getUser = () => {\r\n        const { id } = this.props.match.params;\r\n        if (id) {\r\n            this.setState({ isMyProfile: false })\r\n            this.props.loadUser(id)\r\n        }\r\n        else {\r\n            this.setState({ isMyProfile: true });\r\n        }\r\n    }\r\n\r\n    onShowModal = (action) => {\r\n        this.setState({ showModal: action })\r\n    }\r\n\r\n    onReaction = (reaction) => {\r\n        const { id } = this.props.match.params;\r\n        const targetUserId = id;\r\n        this.props.addReaction(this.props.loggedInUser._id, targetUserId, reaction)\r\n        this.isLike(reaction)\r\n    }\r\n\r\n\r\n    isLike = (reaction) => {\r\n        if (reaction !== 'like') this.props.history.push('/gallery');\r\n    }\r\n\r\n    render() {\r\n        const { loggedInUser } = this.props\r\n        const { isMyProfile } = this.state\r\n        const user = isMyProfile ? loggedInUser : this.props.user;\r\n        const gendersrc = (user.gender === 'male') ? '../assets/images/male.png' : \"../assets/images/female.png\"\r\n\r\n        return (\r\n            (!user) ? <div>Loding</div> :\r\n                <section className=\"page flex justify-center align-center\">\r\n                    <section className=\"user-profile-page flex justify-center align-center\">\r\n                        <section className=\"user-profile flex align-center \">\r\n                            <div className=\"main-section flex justify-center column\">\r\n                                <Carousel>\r\n                                    {user.imagesUrls.map((img, idx) => {\r\n                                        return (\r\n                                            <img key={idx} src={img} alt=\"no-img\" />\r\n                                        )\r\n                                    })}\r\n                                </Carousel>\r\n                                <div className=\"btn-section flex justify-center align-center\">\r\n                                    {!isMyProfile && <div className=\"btn-display flex  justify-around  align-center \">\r\n                                        <img className=\"pass\" src='../assets/images/new-x.png' alt=\"\" onClick={() => this.onReaction('dislike')} />\r\n                                        <img className=\"love\" src='../assets/images/heart-circle-pinkier.png' alt=\"\" onClick={() => this.onReaction('like')} />\r\n                                    </div>}\r\n\r\n                                </div>\r\n                            </div>\r\n                            <section className=\"details-area  flex  justify-start  column\">\r\n\r\n                                <div className=\"user-detils flex justify-start align-center \">\r\n                                    <div>{user.fullName}</div>\r\n                                    <img className=\" gender\" src={gendersrc} />\r\n                                    <div>{user.age} from  {user.city}</div>\r\n                                </div>\r\n                                <div className=\"preferences\">My Posts</div>\r\n                                {(!user) ? <div>No posts to show  </div> : <PostList user={user} />}\r\n\r\n                                <div className=\"preferences\">Preferences</div>\r\n                                <div className=\"about\"><About user={user} /></div>\r\n                                {isMyProfile && <div className=\"user-btns flex\">\r\n                                    <div className=\"edit-btn\" title=\"Edit Profile\">\r\n                                        <img className=\"edit-profile\" src='../assets/images/edit-profile-pinkish.png' alt=\"\" onClick={() => this.props.history.push('/editprofile')} />\r\n                                    </div>\r\n                            \r\n                            \r\n                                    <div className=\"addPhoto-btn\">\r\n                                        <input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" name=\"profileImg\" multiple onChange={this.onAddphoto} hidden />\r\n                                        <label htmlFor=\"icon-button-file\" className=\"img-upload-lable\" title=\"Upload image\">\r\n                                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                                <PhotoCamera />\r\n                                            </IconButton>\r\n                                        </label>\r\n                                    </div>\r\n                            \r\n                                </div>}\r\n                            </section>\r\n                        </section>\r\n                    </section >\r\n                </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.userStore.currUser,\r\n        loggedInUser: state.userStore.loggedInUser\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    loadUser,\r\n    updateUser,\r\n    login,\r\n    addReaction,\r\n    updateLoggedInUser,\r\n    addImgProfile\r\n};\r\n\r\nexport default UserProfile = connect(mapStateToProps, mapDispatchToProps)(UserProfile);\r\n\r\n\r\n\r\n",
    "import React from 'react';\r\n\r\nexport function MatchPreview({ loggedInUser, targetUser, match, onOpenMatch }) {\r\n\r\n    function isMatchOpen (loggedInUser, match) {\r\n        for (let key in match) {\r\n            if (key === 'user1') {\r\n                if (match[key].id === loggedInUser._id) return match[key].isOpenNotification;\r\n            } else if (key === 'user2') {\r\n                if (match[key].id === loggedInUser._id) return match[key].isOpenNotification;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <article className={`match-prev ${isMatchOpen(loggedInUser, match) ? '': 'match-prev-active'}`} onClick={() => onOpenMatch(match._id)}>\r\n            <div className=\"match-prev-info flex\">\r\n                <img className=\"mini-img\" src={targetUser.imageUrl} alt=\"no-img\" />\r\n                <p>{targetUser.name}</p>\r\n            </div>\r\n            {!match.msgs.length ? '' : <p className=\"match-prev-msg\">{match.msgs[match.msgs.length - 1].from}: {match.msgs[match.msgs.length - 1].txt}</p>}\r\n        </article>\r\n    )\r\n}",
    "import React from 'react';\r\nimport { MatchPreview } from '../cmps/MatchPreview';\r\n\r\nexport function MatchList({ matches, loggedInUser, onOpenMatch }) {\r\n\r\n    function getMatchUserInfo(match, loggedInUser) {\r\n        for (let key in match) {\r\n            if (key === 'user1') {\r\n                if (match[key].name !== loggedInUser.fullName) return match[key];\r\n            } else if (key === 'user2') {\r\n                if (match[key].name !== loggedInUser.fullName) return match[key];\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <section className=\"match-list\">\r\n            {matches.map((match, idx) => <MatchPreview key={`match-${idx}`}\r\n                loggedInUser={loggedInUser} targetUser={getMatchUserInfo(match, loggedInUser)} match={match} onOpenMatch={onOpenMatch} />)}\r\n        </section>\r\n    )\r\n}",
    "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { loadMatches, loadMatch, openMatch } from '../store/actions/matchActions';\r\nimport { logout, loadUsers, loadUser, addPost, setLoggedinUser, activeBgScreen, closeBgScreen } from '../store/actions/userActions';\r\nimport { MatchList } from '../cmps/MatchList';\r\nimport socketService from '../services/socketService';\r\nimport { userService } from '../services/userService';\r\n\r\n\r\nclass Navbar extends Component {\r\n    state = {\r\n        isProfileBtnActive: false,\r\n        isMatchBtnActive: false,\r\n        isAddPostActive: false,\r\n        view: 'encounter',\r\n        isEncounter: true,\r\n        isNewMatch: null,\r\n        //isBackAddPostShown: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.loggedInUser) {\r\n            this.setUpNavbar();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.loggedInUser !== prevProps.loggedInUser && this.props.loggedInUser && !prevProps.loggedInUser) {\r\n            this.setUpNavbar();\r\n        }\r\n        \r\n        \r\n\r\n    }\r\n\r\n    setUpNavbar = async () => {\r\n        const updatedUser = await userService.getById(this.props.loggedInUser._id)\r\n        socketService.runSockets(updatedUser);\r\n        this.props.setLoggedinUser(updatedUser);\r\n        this.props.loadMatches(this.props.loggedInUser._id);\r\n        socketService.on('new match', (match) => {\r\n            this.props.loadMatches(this.props.loggedInUser._id);\r\n            this.onNewMatch(match);\r\n        });\r\n        // socketService.on('new msg', () => {\r\n        //     this.props.loadMatch(this.props.match._id);\r\n        // });\r\n        socketService.on('post added', ({ userId }) => {\r\n            this.props.loadUser(userId);\r\n        });\r\n    }\r\n\r\n    onNewMatch = (match) => {\r\n        console.log('Matched made in heaven...', match);\r\n        let matchName = this.getMatchName(match)\r\n        console.log('Matched made with...', matchName);\r\n        this.setState({ isNewMatch: matchName })\r\n        setTimeout(() => {\r\n            this.setState({ isNewMatch: null })\r\n\r\n        }, 1200)\r\n\r\n    }\r\n\r\n    onClickGoHomePage = () => {\r\n        //this.setState({ isBackAddPostShown: false })\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    onClickProfileBtn = () => {\r\n        this.setState(prevState => ({ isProfileBtnActive: !prevState.isProfileBtnActive, isMatchBtnActive: false }));\r\n        \r\n    }\r\n\r\n    onClickMatchBtn = () => {\r\n        this.setState(prevState => ({ isMatchBtnActive: !prevState.isMatchBtnActive, isProfileBtnActive: false }));\r\n    }\r\n\r\n    onToggleView = () => {\r\n        let { isEncounter } = this.state;\r\n        //this.setState({ isBackAddPostShown: true })\r\n\r\n        if (isEncounter) {\r\n            this.props.history.push('/gallery');\r\n            this.setState({ isEncounter: false })\r\n        } else {\r\n            this.props.history.push('/encounter');\r\n            this.setState({ isEncounter: true })\r\n        }\r\n    }\r\n\r\n    onOpenMatchChat = (matchId) => {\r\n        if (window.location.pathname === '/gallery') return;\r\n        this.setState({ isMatchBtnActive: false });\r\n        this.props.openMatch(this.props.loggedInUser._id, matchId);\r\n        this.props.loadMatch(matchId);\r\n    }\r\n\r\n    onAddPostBtn = () => {\r\n        this.setState(prevState => ({ isAddPostActive: !prevState.isAddPostActive }), () => {\r\n            if (window.location.pathname === '/addpost') this.props.history.push('/profile')\r\n            else this.props.history.push('/addpost');\r\n        })\r\n    }\r\n\r\n    onOpenMyProfile = () => {\r\n        this.setState({ isProfileBtnActive: false}); //isBackAddPostShown: true \r\n    }\r\n\r\n    onLogOut = () => {\r\n        this.props.logout();\r\n        this.setState({ isProfileBtnActive: false });\r\n    }\r\n\r\n    get matchCnt() {\r\n        const { matches, loggedInUser } = this.props;\r\n        return matches.reduce((acc, match) => {\r\n            if (match.user1.id === loggedInUser._id) {\r\n                acc = match.user1.isOpenNotification ? acc : acc + 1;\r\n            } else {\r\n                acc = match.user2.isOpenNotification ? acc : acc + 1;\r\n            }\r\n            return acc;\r\n        }, 0);\r\n    }\r\n\r\n    getMatchName = (match) => {\r\n        const { loggedInUser } = this.props;\r\n        let matchName;\r\n        for (let key in match) {\r\n            if (key === 'user1') {\r\n                if (match[key].name !== loggedInUser.fullName) matchName = matchName = match[key].name;\r\n            } else if (key === 'user2') {\r\n                if (match[key].name !== loggedInUser.fullName) matchName = match[key].name;\r\n            }\r\n        }\r\n        return matchName;\r\n    }\r\n\r\n    onGoLogin = (value) => {\r\n        //console.log('value: ', value);\r\n        //this.setState({ isBackAddPostShown: true })\r\n        this.props.history.push(`/${value}`)\r\n    }\r\n\r\n    render() {\r\n        const { matches, loggedInUser } = this.props;\r\n        const { isProfileBtnActive, isMatchBtnActive, isEncounter, isNewMatch } = this.state;\r\n        return (\r\n            <section className=\"navbar flex space-between align-center\">\r\n                <div className=\"logo\" onClick={this.onClickGoHomePage}>\r\n                    T<span>w</span>inder\r\n                </div>\r\n                {!loggedInUser && <div className=\"nav-login flex justify-end align-center\">\r\n                    <img className=\"get-started-btn\" title=\"Get Started\" src='../assets/images/get-started2.png' alt=\"\" onClick={() => this.onGoLogin('encounter')} />\r\n                    <img className=\"login-btn\" title=\"Login / Signup\" src='../assets/images/login7.png' alt=\"\" onClick={() => this.onGoLogin('login')} />\r\n                    {/* <Link to=\"/encounter\" className=\"nav-link link\">Get Started</Link>\r\n                    <Link to=\"/login\" className=\"nav-link link\">Login/SignUp</Link> */}\r\n                </div>}\r\n                {loggedInUser && <div className=\"navbar-nav flex space-between\">\r\n                    {(window.location.pathname !== '/') && <img className=\"add-post-btn2\" title=\"Add Post\" src='../assets/images/add3.png' alt=\"\" onClick={this.onAddPostBtn} />}\r\n                    {isEncounter && <img className=\"nav-gallery-btn\" src='../assets/images/gallery-icon.png' alt=\"\" onClick={this.onToggleView} />}\r\n                    {!isEncounter && <img className=\"nav-encounter-btn\" src='../assets/images/playing_cards.png' alt=\"\" onClick={this.onToggleView} />}\r\n                    <div className=\"option-btn flex space-between\">\r\n                        <article>\r\n                            <img className=\"nav-match-btn\" src={(this.matchCnt > 0) ? '../assets/images/match-full.png' : '../assets/images/match.png'} alt=\"\" onClick={this.onClickMatchBtn} />\r\n                            {(this.matchCnt > 0) && <span title=\"New matches!\" className=\"match-count\">{this.matchCnt} </span>}\r\n                            {isMatchBtnActive && matches.length && <MatchList matches={matches} loggedInUser={loggedInUser} onOpenMatch={this.onOpenMatchChat} />}\r\n                        </article>\r\n                        <button className=\"nav-profile-btn\" onClick={this.onClickProfileBtn} >\r\n                            <img className=\"mini-img\" src={loggedInUser.imagesUrls[0]} alt=\"\" />\r\n                        </button>\r\n                        {isProfileBtnActive && <div className=\"profile-dropdown navbar-modal flex column align-center\">\r\n                            <img className=\"arrow-menu\" src=\"../assets/images/menu-arrow.png\" alt=\"\" />\r\n                            <Link to={`/profile`} className=\"link\" onClick={this.onOpenMyProfile}>Profile</Link>\r\n                            <Link to={`/`} className=\"link\" onClick={this.onLogOut}>Logout</Link>\r\n                            <Link to=\"/about\" className=\"navbar-about link\">About</Link>\r\n                        </div>}\r\n                    </div>\r\n                    {loggedInUser && (window.location.pathname !== '/') && <img className=\"go-back-btn\" src='../assets/images/go-back3.png' alt=\"\" onClick={() => this.props.history.goBack()} />}\r\n\r\n                </div>}\r\n                {isNewMatch && <div className=\"new-match\">\r\n                    <h2>NEW MATCH WITH </h2>\r\n                    <h2>{isNewMatch}</h2>\r\n                    <h3>Start chatting and discover someone new</h3>\r\n                </div>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n// {isNewMatch && <div className=\"new-match\">\r\n//                     <div className=\"new-match-img\">\r\n//                     </div> \r\n//                     <div className=\"new-match-txt\">\r\n//                         <h2>NEW MATCH WITH </h2>\r\n//                         <h2>{isNewMatch}</h2>\r\n//                         <h3>Start chatting and get acquainted</h3>\r\n//                             {/* discover a new world */}\r\n//                     </div>\r\n//                 </div>}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        matches: state.matchStore.matches,\r\n        match: state.matchStore.currMatch,\r\n        newMatchCnt: state.matchStore.newMatchCnt,\r\n        users: state.userStore.users,\r\n        loggedInUser: state.userStore.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadMatches,\r\n    loadMatch,\r\n    addPost,\r\n    loadUsers,\r\n    loadUser,\r\n    setLoggedinUser,\r\n    logout,\r\n    openMatch,\r\n    activeBgScreen,\r\n    closeBgScreen\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport socketService from '../services/socketService';\r\nimport { loadMatches, addMsg, loadMatch, closeChat } from '../store/actions/matchActions';\r\nimport { getTimeDate } from '../services/utilService';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport { Picker } from 'emoji-mart';\r\n\r\n\r\nclass Chat extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.myChat = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        isChatVisible: true,\r\n        msgTxt: '',\r\n        isEmojiesShown: false,\r\n        emojis: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.match) {\r\n            this.props.loadMatch(this.props.match._id);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.myChat.current) {\r\n            this.myChat.current.scrollIntoView();\r\n        }\r\n        if (this.props.match) {\r\n            socketService.on('new msg', () => {\r\n                this.props.loadMatch(this.props.match._id);\r\n            });\r\n        }\r\n    }\r\n\r\n    onHandleMsgChange = ({ target }) => {\r\n        this.setState({ msgTxt: target.value });\r\n    }\r\n\r\n\r\n    onSendMsg = async () => {\r\n        const { loggedInUser } = this.props;\r\n        const { msgTxt } = this.state;\r\n        const { match } = this.props;\r\n        await this.props.addMsg(loggedInUser, msgTxt, match._id);\r\n        const targetUserId = this.targetUser.id;\r\n        this.setState({ msgTxt: '' });\r\n        socketService.emit('chat newMsg', { targetUserId });\r\n    }\r\n\r\n    onClickHideChat = () => {\r\n        this.setState(prevState => ({ isChatVisible: !prevState.isChatVisible }));\r\n    }\r\n\r\n    onClickCloseChat = () => {\r\n        this.props.closeChat();\r\n    }\r\n\r\n    get targetUser() {\r\n        const { match, loggedInUser } = this.props;\r\n        for (let key in match) {\r\n            if (key === 'user1' || key === 'user2') {\r\n                if (match[key].id !== loggedInUser._id) {\r\n                    return match[key];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getTimeDate = (timeStamp) => {\r\n        return getTimeDate(timeStamp);\r\n    }\r\n\r\n    handleKeyPress = (ev) => {\r\n        if (ev.key === 'Enter') {\r\n            this.onSendMsg();\r\n        }\r\n    }\r\n\r\n    onClickEmojiBtn = () => {\r\n        this.setState(prevState => ({ isEmojiesShown: !prevState.isEmojiesShown }));\r\n    }\r\n\r\n    addEmoji = (ev) => {\r\n        let sym = ev.unified.split('-');\r\n        let codesArray = [];\r\n        sym.forEach(el => codesArray.push('0x' + el));\r\n        let emoji = String.fromCodePoint(...codesArray);\r\n        this.setState({\r\n            msgTxt: this.state.msgTxt + emoji\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { loggedInUser } = this.props;\r\n        const match = loggedInUser ? this.props.match : '';\r\n        const { isChatVisible, msgTxt, isEmojiesShown } = this.state;\r\n        return (\r\n            (!match) ? '' : <section className=\"chat flex column space-between\">\r\n                <div className=\"chat-header flex space-between\">\r\n                    <div className=\"chat-header-user-info\">\r\n                        <img className=\"mini-img\" src={this.targetUser.imageUrl} alt=\"\" />\r\n                        {this.targetUser.name}\r\n                    </div>\r\n                    <div className=\"chat-header-btns\">\r\n                        <button className=\"hide-chat-btn\" onClick={this.onClickHideChat} >-</button>\r\n                        <button className=\"close-chat-btn\" onClick={this.onClickCloseChat}>X</button>\r\n                    </div>\r\n                </div>\r\n                {isChatVisible && <div className=\"chat-content flex column align-center space-between justify-end\">\r\n                    <ul className=\"chat-msgs\">\r\n                        {(!match.msgs.length) ? '' : match.msgs.map((msg, idx) => {\r\n                            return <li key={idx} className={msg.userId === loggedInUser._id ? 'my-msg' : 'targetUser-msg'}>\r\n                                <div className=\"msg-info flex space-between align-center\">\r\n                                    {msg.userId === loggedInUser._id ? <img className=\"mini-img\" src={loggedInUser.imagesUrls[0]} alt=\"\" />\r\n                                        : <img className=\"mini-img\" src={this.targetUser.imageUrl} alt=\"no-img\" />}\r\n                                    {this.getTimeDate(msg.createdAt)}\r\n                                </div>\r\n                                <p className={`${idx}`}>{msg.txt}</p>\r\n                            </li>\r\n                        })}\r\n                        <div ref={this.myChat} />\r\n                    </ul>\r\n                </div>}\r\n                {isChatVisible && <div className=\"chat-footer flex column\">\r\n                    <section className=\"chat-inputs\" onKeyPress={this.handleKeyPress}>\r\n                        <TextField\r\n                            className=\"msg-input\"\r\n                            id=\"standard-textarea\"\r\n                            placeholder=\"Type a message\"\r\n                            onChange={this.onHandleMsgChange}\r\n                            value={msgTxt}\r\n                            multiline\r\n                        />\r\n                        <span className=\"emoji-btn\" onClick={this.onClickEmojiBtn}>&#128515;</span>\r\n                        {isEmojiesShown && <Picker style={{ position: 'absolute', bottom: '65px', right: '10px' }}\r\n                            onSelect={this.addEmoji} showPreview={false} title=\"Twinder\" />}\r\n                        <Button variant=\"contained\" className=\"sendMsg-btn\" onClick={this.onSendMsg}>Send</Button>\r\n                    </section>\r\n                </div>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        match: state.matchStore.currMatch,\r\n        loggedInUser: state.userStore.loggedInUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addMsg,\r\n    loadMatches,\r\n    loadMatch,\r\n    closeChat\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { addPost } from '../store/actions/userActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Picker } from 'emoji-mart';\r\n\r\n\r\nclass AddPost extends Component {\r\n    state = {\r\n        newPostTxt: '',\r\n        isEmojiesShown: false\r\n    }\r\n\r\n    handelPostChange = ({ target }) => {\r\n        this.setState({ newPostTxt: target.value });\r\n    }\r\n\r\n    onAddPost = (ev) => {\r\n        ev.preventDefault();\r\n        const { newPostTxt } = this.state;\r\n        const { loggedInUser } = this.props;\r\n        this.props.addPost(loggedInUser._id, newPostTxt);\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    onClickEmojiBtn = () => {\r\n        this.setState(prevState => ({ isEmojiesShown: !prevState.isEmojiesShown }));\r\n    }\r\n\r\n    addEmoji = (ev) => {\r\n        console.log('entered')\r\n        let sym = ev.unified.split('-');\r\n        let codesArray = [];\r\n        sym.forEach(el => codesArray.push('0x' + el));\r\n        let emoji = String.fromCodePoint(...codesArray);\r\n        this.setState({\r\n            newPostTxt: this.state.newPostTxt + emoji\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isEmojiesShown, newPostTxt } = this.state;\r\n        return (\r\n            (!this.props.loggedInUser) ? '' : <section className=\"add-post flex column\">\r\n                <h1>Add Post</h1>\r\n                <TextField\r\n                    id=\"filled-multiline-static\"\r\n                    className=\"textarea\"\r\n                    label=\"Post\"\r\n                    multiline\r\n                    rows={10}\r\n                    value={newPostTxt}\r\n                    placeholder={`What is on your mind ${this.props.loggedInUser.fullName}`}\r\n                    variant=\"filled\"\r\n                    onChange={this.handelPostChange}\r\n                />\r\n                <span className=\"emoji-btn\" onClick={this.onClickEmojiBtn}>&#128515;</span>\r\n                {isEmojiesShown && <Picker onSelect={this.addEmoji} showPreview={false} title=\"Twinder\" />}\r\n                <Button className=\"post-btn\" variant=\"outlined\" color=\"primary\" onClick={this.onAddPost}>\r\n                    Post\r\n                    </Button>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.userStore.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addPost\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);",
    "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateUser, updateLoggedInUser } from '../store/actions/userActions.js';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nclass EditProfile extends Component {\r\n\r\n    state = {\r\n        user: {\r\n            _id: '',\r\n            age: '',\r\n            city: '',\r\n            email: '',\r\n            fullName: '',\r\n            gender: '',\r\n            imagesUrls: '',\r\n            isAdmin: '',\r\n            isBlock: '',\r\n            joinedAt: '',\r\n            password: '',\r\n            posts: '',\r\n            reactions: '',\r\n            userPrefs: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const user = this.props.loggedUser;\r\n        this.setState({ user });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n\r\n        let { name, value } = ev.target;\r\n        value = ev.target.type === 'number' ? parseInt(value) : value;\r\n        this.setState(prevState => {\r\n            return {\r\n                user: {\r\n                    ...prevState.user,\r\n                    [name]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleFormChange = (ev) => {\r\n\r\n        let { name, value } = ev.target;\r\n        value = ev.target.type === 'number' ? parseInt(value) : value;\r\n        this.setState(prevState => {\r\n            return {\r\n                user: {\r\n                    ...prevState.user,\r\n                    userPrefs: {\r\n                        ...prevState.user.userPrefs,\r\n                        [name]: value\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.props.updateUser(this.state.user);\r\n        this.props.updateLoggedInUser(this.state.user);\r\n        this.props.history.push('/profile');\r\n    }\r\n\r\n\r\n    render() {\r\n        const { age, city, email, fullName, gender, password, userPrefs, _id } = this.state.user;\r\n\r\n        return (\r\n\r\n            <div className=\"edit-profile flex column\">\r\n                <h2> Edit your details</h2>\r\n                {_id && <section className=\"edit-profile-form flex column align-center\">\r\n                    <TextField\r\n                        id=\"standard-textarea\"\r\n                        label=\"Full Name\"\r\n                        type=\"text\"\r\n                        name=\"fullName\"\r\n                        value={fullName}\r\n                        multiline\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <InputLabel id=\"demo-simple-select-label-gender\">Gender</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label-gender\"\r\n                        id=\"demo-simple-select\"\r\n                        name=\"gender\"\r\n                        value={gender}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        <MenuItem value=\"male\">Male</MenuItem>\r\n                        <MenuItem value=\"female\">Female</MenuItem>\r\n                    </Select>\r\n                    <TextField\r\n                        id=\"standard-number\"\r\n                        label=\"Age\"\r\n                        type=\"number\"\r\n                        name=\"age\"\r\n                        value={age}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <InputLabel id=\"demo-simple-select-label-city\">City</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label-city\"\r\n                        id=\"demo-simple-select\"\r\n                        name=\"city\"\r\n                        value={city}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        <MenuItem value=\"Tel-Aviv\">Tel-Aviv</MenuItem>\r\n                        <MenuItem value=\"Jerusalem\">Jerusalem</MenuItem>\r\n                    </Select>\r\n                    <TextField\r\n                        id=\"standard-textarea\"\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        value={email}\r\n                        multiline\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <TextField\r\n                        id=\"standard-textarea\"\r\n                        label=\"New-Password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        multiline\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    {/* <label>\r\n                        Posts:\r\n                        {posts.map((post, idx) => {\r\n                        return <TextField\r\n                            key={idx}\r\n                            id=\"outlined-multiline-static\"\r\n                            label=\"Post\"\r\n                            name=\"posts\"\r\n                            type=\"text\"\r\n                            value={post.txt}\r\n                            multiline\r\n                            onChange={this.handleChange}\r\n                            variant=\"outlined\"\r\n                        /> */}\r\n                    {/* // return <input type=\"text\" key={idx} name=\"posts\" value={post.txt} */}\r\n                    {/* //     onChange={this.handleChange} placeholder={post.txt} /> */}\r\n                    {/* // })} */}\r\n                    {/* </label> */}\r\n                    <h3 className=\"preference-header\"> My Preference</h3>\r\n                    <InputLabel id=\"demo-simple-select-label-city\">City</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label-city\"\r\n                        id=\"demo-simple-select\"\r\n                        name=\"city\"\r\n                        value={userPrefs.city}\r\n                        onChange={this.handleFormChange}\r\n                    >\r\n                        <MenuItem value=\"Tel-Aviv\">Tel-Aviv</MenuItem>\r\n                        <MenuItem value=\"Jerusalem\">Jerusalem</MenuItem>\r\n                    </Select>\r\n                    <InputLabel id=\"demo-simple-select-label-gender\">Gender</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label-gender\"\r\n                        id=\"demo-simple-select\"\r\n                        name=\"gender\"\r\n                        value={userPrefs.gender}\r\n                        onChange={this.handleFormChange}\r\n                    >\r\n                        <MenuItem value=\"male\">Male</MenuItem>\r\n                        <MenuItem value=\"female\">Female</MenuItem>\r\n                    </Select>\r\n                     <TextField\r\n                        id=\"standard-number\"\r\n                        label=\"Max-Age\"\r\n                        type=\"number\"\r\n                        name=\"maxAge\"\r\n                        value={userPrefs.maxAge}\r\n                        onChange={this.handleFormChange}\r\n                    />\r\n                     <TextField\r\n                        id=\"standard-number\"\r\n                        label=\"Min-Age\"\r\n                        type=\"number\"\r\n                        name=\"minAge\"\r\n                        value={userPrefs.minAge}\r\n                        onChange={this.handleFormChange}\r\n                    />\r\n                    <Button variant=\"contained\" onClick={this.handleSubmit}>\r\n                        Save\r\n                    </Button>\r\n                </section>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedUser: state.userStore.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateUser,\r\n    updateLoggedInUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);\r\n\r\n\r\n\r\n",
    "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function Footer () {\r\n    return (\r\n        <section className = \"footer flex align-center space-between\">\r\n            <Link to = \"/about\" className = \"about-link link\">About</Link>\r\n            <div>&copy; Twinder International Ltd. 2020</div>\r\n        </section>\r\n    )\r\n}",
    "import React from 'react';\r\nimport { Router, Switch, Route } from 'react-router';\r\nimport history from './history';\r\nimport './styles/global.scss';\r\n\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport SignUp from './pages/SignUp';\r\nimport { About } from './pages/About';\r\nimport Gallery from './pages/Gallery';\r\nimport Encounter from './pages/Encounter';\r\nimport { Dashboard } from './pages/Dashboard';\r\nimport UserProfile from './pages/UserProfile';\r\nimport Navbar from './cmps/NavBar';\r\nimport Chat from './cmps/Chat';\r\nimport AddPost from './cmps/AddPost';\r\nimport EditProfile from './cmps/EditProfile';\r\nimport { Footer } from './cmps/Footer';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Router history={history}>\r\n        <Navbar history={history} />\r\n        <section className='main-container'>\r\n          <Switch>\r\n            <Route path=\"/\" component={Home} exact />\r\n            <Route path=\"/about\" component={About} exact />\r\n            <Route path=\"/login\" component={Login} exact />\r\n            <Route path=\"/signup\" component={SignUp} exact />\r\n            <Route path=\"/encounter\" component={Encounter} exact />\r\n            <Route path=\"/gallery\" component={Gallery} exact />\r\n            <Route path=\"/admin/dash\" component={Dashboard} exact />\r\n            <Route path=\"/profile/:id?\" component={UserProfile} exact />\r\n            <Route path=\"/addpost\" component={AddPost} exact />\r\n            <Route path=\"/editprofile\" component={EditProfile} exact />\r\n          </Switch>\r\n          <Chat />\r\n        </section>\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n",
    "const initialState = {\r\n    matches: [],\r\n    currMatch: '',\r\n    newMatchCnt: 0\r\n}\r\n\r\nexport function matchReducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'SET_MATCHES':\r\n            return { ...state, matches: action.matches };\r\n        case 'SET_MATCH':\r\n            return { ...state, currMatch: action.match };\r\n        case 'MATCH_REMOVE':\r\n            return {\r\n                ...state,\r\n                matches: state.matches.filter(match => match._id !== action.matchId)\r\n            }\r\n        case 'MATCH_ADD':\r\n            return {\r\n                ...state,\r\n                matches: [action.match, ...state.matches]\r\n            }\r\n        case 'ADD_NEW_MATCH_NOTIFY':\r\n            return {\r\n                ...state,\r\n                newMatchCnt: 1 \r\n            }\r\n        case 'UPDATE_MATCH':\r\n            return {\r\n                ...state,\r\n                matches: state.matches.map(match => {\r\n                    if (match._id === action.match._id) return action.match;\r\n                    return match;\r\n                })\r\n            }\r\n        case 'CLOSE_CHAT':\r\n            return {\r\n                ...state,\r\n                currMatch: ''\r\n            }\r\n        case 'MSG_ADD':\r\n            return {\r\n                ...state,\r\n                matches: state.matches.map(match => {\r\n                    if (match._id === action.data.matchId) {\r\n                       match.msgs = [...match.msgs, action.data.msg]\r\n                    }\r\n                    return match;\r\n                }),\r\n                currMatch: {...state.currMatch, msgs: [...state.currMatch.msgs, action.data.msg]}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n",
    "let loggedInUser = sessionStorage.getItem('user')\r\nloggedInUser = (loggedInUser) ? JSON.parse(loggedInUser) : null\r\nconst initialState = {\r\n  loggedInUser,\r\n  users: [],\r\n  currUser: '',\r\n  isBgScreenActive: false\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_LOGGEDIN_USER':\r\n      return { ...state, loggedInUser: action.user };\r\n    case 'SET_USER':\r\n      return { ...state, currUser: action.user };\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      }\r\n    case 'LOGGEDIN_USER_REMOVE':\r\n      return { ...state, loggedInUser: '' }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users };\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.map(user => {\r\n          if (user._id === action.user._id) return action.user;\r\n          return user;\r\n        })\r\n      }\r\n    case 'LOGGEDIN_USER_UPDATE':\r\n      return { ...state, loggedInUser: action.user };\r\n    case 'ADD_REACTIONS':\r\n      return {\r\n        ...state,\r\n        loggedInUser: {\r\n          ...state.loggedInUser,\r\n          reactions: [...state.loggedInUser.reactions, action.newReaction]\r\n        }\r\n      }\r\n    case 'ADD_POST':\r\n      return {\r\n        ...state,\r\n        loggedInUser: {\r\n          ...state.loggedInUser,\r\n          posts: [action.post, ...state.loggedInUser.posts]\r\n        }\r\n      }\r\n    case 'ADD_USER_IMG':\r\n      return {\r\n        ...state,\r\n        loggedInUser: {\r\n          ...state.loggedInUser,\r\n          imagesUrls: [action.img, ...state.loggedInUser.imagesUrls]\r\n        }\r\n      }\r\n    case 'ACTIVE_BG_SCREEN':\r\n      return {\r\n        ...state,\r\n        isBgScreenActive: true\r\n      }\r\n    case 'CLOSE_BG_SCREEN':\r\n      return {\r\n        ...state,\r\n        isBgScreenActive: false \r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n",
    "import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {matchReducer} from './reducers/matchReducer';\r\nimport {userReducer} from './reducers/userReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  matchStore: matchReducer,\r\n  userStore: userReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n)\r\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n// TODO: use scss\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {store} from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"
  ],
  "sourceRoot": ""
}
